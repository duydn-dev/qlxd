// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DuLieuXangDauContext))]
    [Migration("20220523022419_add_IsActive_HeThongPhanPhoitbl")]
    partial class add_IsActive_HeThongPhanPhoitbl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.ActionLogs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentLog")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("TimeLine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("TimeLine")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Url")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("DataAccess.CauHinh", b =>
                {
                    b.Property<int>("MaChungLoai")
                        .HasColumnType("int");

                    b.Property<int?>("DonViTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TenDonVi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChungLoai");

                    b.ToTable("CauHinh");
                });

            modelBuilder.Entity("DataAccess.ChungLoai", b =>
                {
                    b.Property<int>("MaChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TenChungLoai")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaChungLoai");

                    b.ToTable("ChungLoai");
                });

            modelBuilder.Entity("DataAccess.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CmtOrCccdnguoiDaiDienPhapLuat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CmtOrCCCDNguoiDaiDienPhapLuat");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("IdZone")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Mien")
                        .HasColumnType("int");

                    b.Property<string>("NameCp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NgayThangNamSinhNguoiDaiDienPhapLuat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParentID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SdtlienHe")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SDTLienHe");

                    b.Property<string>("SdtlienHeNguoiDaiDienPhapLuat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SDTLienHeNguoiDaiDienPhapLuat");

                    b.Property<string>("SoGiayDangKyKinhDoanh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TenNguoiDaiDienPhapLuat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("typeID");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Website")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DataAccess.Config", b =>
                {
                    b.Property<Guid>("ConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("ConfigId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("DataAccess.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DataAccess.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateIssued")
                        .HasColumnType("datetime");

                    b.Property<string>("DocNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("DataAccess.DoiTuongQuanLy", b =>
                {
                    b.Property<int>("MaDoiTuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LoaiDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("TenDoiTuong")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ToBen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WhiteListIp")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("MaDoiTuong");

                    b.ToTable("DoiTuongQuanLy");
                });

            modelBuilder.Entity("DataAccess.DuKienNhap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChungLoai")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MuaTuTNDMKhac")
                        .HasColumnType("float");

                    b.Property<DateTime>("NgayBC")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NhapKhac")
                        .HasColumnType("float");

                    b.Property<double?>("NhapKhau")
                        .HasColumnType("float");

                    b.Property<double?>("NhapNhaMayTrongNuoc")
                        .HasColumnType("float");

                    b.Property<double?>("SoLuong")
                        .HasColumnType("float");

                    b.Property<double?>("TuSXPC")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DuKienNhaps");
                });

            modelBuilder.Entity("DataAccess.GiaBanXangDauDoanhNghiep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<int>("MaChungLoai")
                        .HasColumnType("int");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GiaBanXangDauDoanhNghieps");
                });

            modelBuilder.Entity("DataAccess.GiaXangDau", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DotBienDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DotBienDong")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Gia")
                        .HasColumnType("float");

                    b.Property<int>("MaChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayCapNhat")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int>("VungMien")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GiaXangDaus");
                });

            modelBuilder.Entity("DataAccess.GiayDangKyKinhDoanh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DiaChiHuyen")
                        .HasColumnType("int")
                        .HasColumnName("DiaChi_Huyen");

                    b.Property<int?>("DiaChiTinh")
                        .HasColumnType("int")
                        .HasColumnName("DiaChi_Tinh");

                    b.Property<int?>("DiaChiXa")
                        .HasColumnType("int")
                        .HasColumnName("DiaChi_Xa");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NguoiDaiDienCccd")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NguoiDaiDien_CCCD");

                    b.Property<string>("NguoiDaiDienDob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NguoiDaiDien_DOB");

                    b.Property<string>("NguoiDaiDienSdt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NguoiDaiDien_SDT");

                    b.Property<string>("NguoiDaiDienTen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NguoiDaiDien_Ten");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SoDkkd")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SoDKKD");

                    b.Property<string>("TenDoanhNghiep")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GiayDangKyKinhDoanh");
                });

            modelBuilder.Entity("DataAccess.GiayDangKyKinhDoanhVer", b =>
                {
                    b.Property<int>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DiaChiHuyen")
                        .HasColumnType("int")
                        .HasColumnName("DiaChi_Huyen");

                    b.Property<int?>("DiaChiTinh")
                        .HasColumnType("int")
                        .HasColumnName("DiaChi_Tinh");

                    b.Property<int?>("DiaChiXa")
                        .HasColumnType("int")
                        .HasColumnName("DiaChi_Xa");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NguoiDaiDienCccd")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NguoiDaiDien_CCCD");

                    b.Property<string>("NguoiDaiDienDob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NguoiDaiDien_DOB");

                    b.Property<string>("NguoiDaiDienSdt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NguoiDaiDien_SDT");

                    b.Property<string>("NguoiDaiDienTen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NguoiDaiDien_Ten");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SoDkkd")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SoDKKD");

                    b.Property<string>("TenDoanhNghiep")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Ver")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MaDoiTuong");

                    b.ToTable("GiayDangKyKinhDoanhVer");
                });

            modelBuilder.Entity("DataAccess.GroupRole", b =>
                {
                    b.Property<Guid>("GroupRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupRoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupRoleId");

                    b.ToTable("GroupRole");
                });

            modelBuilder.Entity("DataAccess.GroupRoleUserPosition", b =>
                {
                    b.Property<Guid>("GroupRoleUserPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PositionUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupRoleUserPositionId");

                    b.ToTable("GroupRoleUserPositions");
                });

            modelBuilder.Entity("DataAccess.HeThongPhanPhoi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DienThoai")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiDoiTuongCon")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiSoHuu")
                        .HasColumnType("int");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDoiTuongCha")
                        .HasColumnType("int");

                    b.Property<int>("MaDoiTuongCon")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHeThongPhanPhoi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HeThongPhanPhoi");
                });

            modelBuilder.Entity("DataAccess.Khac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("LuongChuyenKhau")
                        .HasColumnType("int");

                    b.Property<double?>("LuongPhaChe")
                        .HasColumnType("float");

                    b.Property<int?>("LuongTamNhapTaiXuat")
                        .HasColumnType("int");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Khac");
                });

            modelBuilder.Entity("DataAccess.LoaiMatHang", b =>
                {
                    b.Property<int>("LoaiMatHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoaiMatHangID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("TenMatHang")
                        .HasColumnType("float");

                    b.Property<int?>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("LoaiMatHangId");

                    b.ToTable("LoaiMatHang");
                });

            modelBuilder.Entity("DataAccess.Locality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<byte>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("DataAccess.Member", b =>
                {
                    b.Property<string>("Acc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("acc");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<string>("Birthday")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("birthday");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("email");

                    b.Property<string>("InfomationOther")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("infomationOther");

                    b.Property<int?>("Lever")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lever")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ListAccess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pass");

                    b.Property<string>("PassReset")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("passReset");

                    b.Property<int?>("Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("point")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.HasKey("Acc");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("DataAccess.NguyenLieu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double?>("LuongNhap")
                        .HasColumnType("float");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguyenLieu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NguyenLieu");
                });

            modelBuilder.Entity("DataAccess.Nhap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiNhap")
                        .HasColumnType("int");

                    b.Property<double?>("LuongNhap")
                        .HasColumnType("float");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Nhap");
                });

            modelBuilder.Entity("DataAccess.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsReaded")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("DataAccess.QuyBinhOnGium", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SoDu")
                        .HasColumnType("float");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuyBinhOnGia");
                });

            modelBuilder.Entity("DataAccess.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.HasIndex("GroupRoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DataAccess.SanXuat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double?>("LuongSanXuat")
                        .HasColumnType("float");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SanXuat");
                });

            modelBuilder.Entity("DataAccess.StoreHouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<float?>("Capacity")
                        .HasColumnType("real");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dwt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nature")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("StoreHouseCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("StoreName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("UnitManager")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float?>("Wattage")
                        .HasColumnType("real");

                    b.Property<string>("ZoneOfInfluence")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("StoreHouses");
                });

            modelBuilder.Entity("DataAccess.StoreHouseCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NumNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StoreHouseCategories");
                });

            modelBuilder.Entity("DataAccess.TieuThu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiBan")
                        .HasColumnType("int");

                    b.Property<double?>("LuongBan")
                        .HasColumnType("float");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TieuThu");
                });

            modelBuilder.Entity("DataAccess.TinhHuyenXa", b =>
                {
                    b.Property<int>("TinhHuyenXaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TinhHuyenXaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Loai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParentID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TenTinhHuyenXa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("TinhHuyenXaId");

                    b.ToTable("TinhHuyenXa");
                });

            modelBuilder.Entity("DataAccess.TonKho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AprrovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AprrovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AprrovedStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ChungLoai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double?>("LuongTon")
                        .HasColumnType("float");

                    b.Property<string>("MD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaPhienBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBC")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int?>("VungMien")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TonKho");
                });

            modelBuilder.Entity("DataAccess.TongNguonPhanGiao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("MaChungLoai")
                        .HasColumnType("int");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TongNguonPhanGiaos");
                });

            modelBuilder.Entity("DataAccess.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("LocalityId")
                        .HasColumnType("int");

                    b.Property<int?>("LocalityLevel")
                        .HasColumnType("int");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Province")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Ward")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "DepartmentId" }, "IX_Users_DepartmentId");

                    b.HasIndex(new[] { "UserPositionId" }, "IX_Users_UserPositionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataAccess.UserPosition", b =>
                {
                    b.Property<Guid>("UserPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<string>("LocalityAccept")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserPositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserPositionId");

                    b.ToTable("UserPosition");
                });

            modelBuilder.Entity("DataAccess.UserRole", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("DataAccess.UsersReference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EncryptUser")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("MaDoiTuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsersReferences");
                });

            modelBuilder.Entity("DataAccess.WarningSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("WarningSystems");
                });

            modelBuilder.Entity("DataAccess.ZoneNews", b =>
                {
                    b.Property<int>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("url");

                    b.HasKey("ZoneId");

                    b.ToTable("ZoneNews");
                });

            modelBuilder.Entity("DataAccess.Role", b =>
                {
                    b.HasOne("DataAccess.GroupRole", "GroupRole")
                        .WithMany("Roles")
                        .HasForeignKey("GroupRoleId");

                    b.Navigation("GroupRole");
                });

            modelBuilder.Entity("DataAccess.User", b =>
                {
                    b.HasOne("DataAccess.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("DataAccess.UserPosition", "UserPosition")
                        .WithMany("Users")
                        .HasForeignKey("UserPositionId");

                    b.Navigation("Department");

                    b.Navigation("UserPosition");
                });

            modelBuilder.Entity("DataAccess.UserRole", b =>
                {
                    b.HasOne("DataAccess.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("DataAccess.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataAccess.GroupRole", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DataAccess.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DataAccess.User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DataAccess.UserPosition", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
